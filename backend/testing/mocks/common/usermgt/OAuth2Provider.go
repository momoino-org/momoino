// Code generated by mockery v2.46.2. DO NOT EDIT.

package mockusermgt

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// MockOAuth2Provider is an autogenerated mock type for the OAuth2Provider type
type MockOAuth2Provider struct {
	mock.Mock
}

type MockOAuth2Provider_Expecter struct {
	mock *mock.Mock
}

func (_m *MockOAuth2Provider) EXPECT() *MockOAuth2Provider_Expecter {
	return &MockOAuth2Provider_Expecter{mock: &_m.Mock}
}

// AuthorizeHandler provides a mock function with given fields: w, r
func (_m *MockOAuth2Provider) AuthorizeHandler(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// MockOAuth2Provider_AuthorizeHandler_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AuthorizeHandler'
type MockOAuth2Provider_AuthorizeHandler_Call struct {
	*mock.Call
}

// AuthorizeHandler is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
func (_e *MockOAuth2Provider_Expecter) AuthorizeHandler(w interface{}, r interface{}) *MockOAuth2Provider_AuthorizeHandler_Call {
	return &MockOAuth2Provider_AuthorizeHandler_Call{Call: _e.mock.On("AuthorizeHandler", w, r)}
}

func (_c *MockOAuth2Provider_AuthorizeHandler_Call) Run(run func(w http.ResponseWriter, r *http.Request)) *MockOAuth2Provider_AuthorizeHandler_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request))
	})
	return _c
}

func (_c *MockOAuth2Provider_AuthorizeHandler_Call) Return() *MockOAuth2Provider_AuthorizeHandler_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockOAuth2Provider_AuthorizeHandler_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request)) *MockOAuth2Provider_AuthorizeHandler_Call {
	_c.Call.Return(run)
	return _c
}

// CallbackHandler provides a mock function with given fields: w, r
func (_m *MockOAuth2Provider) CallbackHandler(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// MockOAuth2Provider_CallbackHandler_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CallbackHandler'
type MockOAuth2Provider_CallbackHandler_Call struct {
	*mock.Call
}

// CallbackHandler is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
func (_e *MockOAuth2Provider_Expecter) CallbackHandler(w interface{}, r interface{}) *MockOAuth2Provider_CallbackHandler_Call {
	return &MockOAuth2Provider_CallbackHandler_Call{Call: _e.mock.On("CallbackHandler", w, r)}
}

func (_c *MockOAuth2Provider_CallbackHandler_Call) Run(run func(w http.ResponseWriter, r *http.Request)) *MockOAuth2Provider_CallbackHandler_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request))
	})
	return _c
}

func (_c *MockOAuth2Provider_CallbackHandler_Call) Return() *MockOAuth2Provider_CallbackHandler_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockOAuth2Provider_CallbackHandler_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request)) *MockOAuth2Provider_CallbackHandler_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockOAuth2Provider creates a new instance of MockOAuth2Provider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockOAuth2Provider(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockOAuth2Provider {
	mock := &MockOAuth2Provider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
